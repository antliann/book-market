{"version":3,"sources":["components/Header.js","components/RatingInStars.js","components/Item.js","components/BooksList.js","components/ItemsInCart.js","components/CartModal.js","App.js","index.js"],"names":["Header","props","useState","query","changeQuery","onSubmit","event","doSearch","preventDefault","className","onChange","target","value","type","placeholder","src","alt","onClick","openModal","countItemsInCart","items","counter","quantity","RatingInStars","style","width","rating","height","backgroundColor","position","top","left","Item","href","googleBooksLink","imgUrl","bookName","makeAuthorsList","bookAuthors","toFixed","price","currency","addToCart","pointerEvents","authors","length","join","BooksList","error","setError","isLoaded","setIsLoaded","setItems","useEffect","fetch","then","res","json","result","message","map","item","volumeInfo","title","imageLinks","thumbnail","averageRating","saleInfo","retailPrice","amount","listPrice","currencyCode","canonicalVolumeLink","id","ItemsInCart","changeQuantity","min","max","cursor","removeItem","CartModal","isOpened","closeModal","marginBottom","transform","TotalPrice","countSum","sum","App","searchQuery","setItemsInCart","cartModalIsOpened","setIfCartModalIsOpened","itemsInCart","dispatch","searchInput","getState","document","body","overflowY","newItem","newQuantity","createStore","action","i","newItems","slice","window","localStorage","setItem","JSON","stringify","confirm","splice","parse","getItem","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.68b7a926.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nexport default function Header(props) {\r\n    const [query, changeQuery] = useState('');\r\n\r\n    return (\r\n        <header>\r\n            <form onSubmit={(event) => {\r\n                if (query) {\r\n                    props.doSearch(query);\r\n                }\r\n                event.preventDefault();\r\n            }}\r\n                  className=\"search\">\r\n                <input\r\n                    onChange={(event) => changeQuery(event.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Search for books\"\r\n                />\r\n                <button className=\"search-btn\" type=\"submit\">\r\n                    <img src=\"search.svg\" alt=\"Search\"/>\r\n                </button>\r\n            </form>\r\n\r\n            <button className=\"shopping-cart\" onClick={props.openModal}>\r\n                <img src=\"cart.svg\" alt=\"Cart\"/>\r\n                <div className=\"items-counter\">{countItemsInCart(props.items)}</div>\r\n            </button>\r\n        </header>\r\n    )\r\n}\r\n\r\nfunction countItemsInCart(items) {\r\n    let counter = 0;\r\n    for (let item of items) {\r\n        counter += item.quantity;\r\n    }\r\n    return counter;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RatingInStars(props) {\r\n    return (\r\n        <div className=\"rating-container\">\r\n            <div style={{\r\n                width: props.rating * 20 + '%',\r\n                height: 28 + 'px',\r\n                backgroundColor: '#FFC107',\r\n                position: \"absolute\",\r\n            }}>\r\n            </div>\r\n            <img src=\"stars.svg\" alt=\"rating\" style={{\r\n                position: \"absolute\",\r\n                top: -1,\r\n                left: -1\r\n            }}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport RatingInStars from \"./RatingInStars\";\r\n\r\n\r\nexport default function Item(props) {\r\n    return (\r\n        <div className=\"item\">\r\n            <a href={props.googleBooksLink} className=\"img-container\" target=\"_blank\">\r\n                {props.imgUrl ?\r\n                    <img src={props.imgUrl} className=\"book-img\" alt=\"Book cover\"/> :\r\n                    \"(No cover image)\"\r\n                }\r\n            </a>\r\n            <a href={props.googleBooksLink} className=\"book-name\" target=\"_blank\">\r\n                {props.bookName}\r\n            </a>\r\n            <p className=\"book-author\">{makeAuthorsList(props.bookAuthors)}</p>\r\n            <div>\r\n                <RatingInStars rating={props.rating}/>\r\n                <span className=\"rating-caption\">\r\n                    {props.rating?.toFixed(1) || \"No rating\"}\r\n                </span>\r\n            </div>\r\n            <p className=\"price-container\">\r\n                <span className=\"price\">{(+props.price).toFixed(2)}</span>\r\n                <span className=\"currency\">{' ' + props.currency}</span>\r\n            </p>\r\n            <button onClick={props.addToCart} className=\"add-to-cart\">\r\n                <img src=\"cart.svg\" alt=\"Cart\" style={{pointerEvents: 'none'}}/>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function makeAuthorsList(authors) {\r\n    if (!authors) return \"No author\";\r\n    if (authors.length < 3) return authors.join(' & ');\r\n    else return authors[0] + ' and others';\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Item from \"./Item\";\r\n\r\n\r\nexport default function BooksList(props) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setIsLoaded(false);\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${props.query}&maxResults=40&filter=paid-ebooks`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result.items);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [props.query])\r\n\r\n    if (error) {\r\n        return <div className=\"info-message\">Error: {error.message}. Please, change your query.</div>;\r\n    } else if (!isLoaded) {\r\n        return <div className=\"info-message\">Loading...</div>;\r\n    } else {\r\n        return (\r\n            items ?\r\n                items.map((item) =>\r\n                    <Item\r\n                        key={item.id}\r\n                        bookName={item.volumeInfo.title}\r\n                        bookAuthors={item.volumeInfo.authors}\r\n                        imgUrl={item.volumeInfo.imageLinks?.thumbnail}\r\n                        rating={item.volumeInfo.averageRating}\r\n                        price={item.saleInfo.retailPrice?.amount || item.saleInfo.listPrice?.amount || 0}\r\n                        currency={\r\n                            item.saleInfo.retailPrice?.currencyCode ||\r\n                            item.saleInfo.listPrice?.currencyCode || \"Unavailable\"\r\n                        }\r\n                        googleBooksLink={item.volumeInfo.canonicalVolumeLink}\r\n                        addToCart={() => props.addToCart({\r\n                            id: item.id,\r\n                            bookName: item.volumeInfo.title,\r\n                            bookAuthors: item.volumeInfo.authors,\r\n                            imgUrl: item.volumeInfo.imageLinks?.thumbnail,\r\n                            price: item.saleInfo.retailPrice?.amount || item.saleInfo.listPrice?.amount || 0,\r\n                            currency:\r\n                                item.saleInfo.retailPrice?.currencyCode ||\r\n                                item.saleInfo.listPrice?.currencyCode || \"Unavailable\",\r\n                            googleBooksLink: item.volumeInfo.canonicalVolumeLink,\r\n                            quantity: 1,\r\n                        })}\r\n                    />\r\n                ) :\r\n                <div className=\"info-message\">\r\n                    No results found. Please, change your query\r\n                </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {makeAuthorsList} from './Item';\r\n\r\n\r\nexport default function ItemsInCart(props) {\r\n    const maxItemsQuantity = 50;\r\n\r\n    return props.items.length ?\r\n        props.items.map(function (item) {\r\n                return (\r\n                    <div key={item.id} className=\"item-in-cart\">\r\n                        <a href={item.googleBooksLink} className=\"img-container\" target=\"_blank\">\r\n                            {item.imgUrl ?\r\n                                <img src={item.imgUrl} className=\"book-img\" alt=\"Book cover\"/> :\r\n                                \"(No cover image)\"\r\n                            }\r\n                        </a>\r\n                        <div className=\"cart-item-info\">\r\n                            <a href={item.googleBooksLink} className=\"book-name\" target=\"_blank\">\r\n                                {item.bookName}\r\n                            </a>\r\n                            <p className=\"book-author\">{makeAuthorsList(item.bookAuthors)}</p>\r\n                            <div>\r\n                            </div>\r\n                            <p className=\"price-container\">\r\n                                <span className=\"price\">{(+item.price).toFixed(2)}</span>\r\n                                <span className=\"currency\">{' ' + item.currency}</span>\r\n                            </p>\r\n                            <div className=\"quantity-counter\">\r\n                                <input\r\n                                    onChange={(event) => props.changeQuantity(item.id, +event.target.value)}\r\n                                    value={item.quantity} type=\"number\" min=\"1\" max={maxItemsQuantity}\r\n                                    className=\"quantity-field\"/>\r\n                                <button\r\n                                    style={item.quantity === 1 ? {backgroundColor: '#BEBEBE', cursor: \"default\"} : {}}\r\n                                    onClick={() => {\r\n                                        if (item.quantity > 1) props.changeQuantity(item.id, item.quantity - 1)\r\n                                    }}\r\n                                    className=\"quantity-button minus\">-\r\n                                </button>\r\n                                <button\r\n                                    style={item.quantity >= maxItemsQuantity ?\r\n                                        {backgroundColor: '#BEBEBE', cursor: \"default\"} : {}}\r\n                                    onClick={() => props.changeQuantity(item.id, item.quantity + 1)}\r\n                                    className=\"quantity-button plus\">+\r\n                                </button>\r\n                                <button className=\"remove-button\" onClick={() => props.removeItem(item.id)}>\r\n                                    <img src=\"remove.svg\" alt=\"Delete\"/>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        ) :\r\n        <div className=\"info-message\" style={{top: '25vh'}}>Your cart is empty</div>;\r\n}\r\n","import React from 'react';\r\nimport ItemsInCart from \"./ItemsInCart\";\r\n\r\n\r\nexport default function CartModal(props) {\r\n    return props.isOpened ?\r\n        <div className=\"cart-window\">\r\n            <div className=\"cart-outside\" onClick={props.closeModal}>\r\n            </div>\r\n            <div className=\"cart-modal\" style={\r\n                props.items.length > 2 ?\r\n                    {marginBottom: '300px'} :\r\n                    {top: '50%', transform: 'translate(-50%, -50%)'}}>\r\n                <button onClick={props.closeModal} className=\"close-modal\">\r\n                    <img src=\"close.svg\" alt=\"close\" width=\"20\" height=\"20\" style={{pointerEvents: 'none'}}/>\r\n                </button>\r\n                <h2>Your cart</h2>\r\n                <div className=\"items-in-cart-list\">\r\n                    <ItemsInCart\r\n                        items={props.items}\r\n                        changeQuantity={(id, quantity) => props.changeQuantity(id, quantity)}\r\n                        removeItem={(id) => props.removeItem(id)}\r\n                    />\r\n                </div>\r\n                <TotalPrice items={props.items}/>\r\n            </div>\r\n        </div> :\r\n        null;\r\n}\r\n\r\nfunction TotalPrice(props) {\r\n    return props.items.length ?\r\n        <div className=\"total-price\">\r\n            <b>Total: {countSum(props.items)}</b> {props.items[0]?.currency}\r\n        </div> :\r\n        null;\r\n}\r\n\r\nfunction countSum(items) {\r\n    let sum = 0;\r\n    for (const item of items) {\r\n        sum += item.price * item.quantity;\r\n    }\r\n    return sum.toFixed(2);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Header from \"./components/Header\";\r\nimport BooksList from \"./components/BooksList\";\r\nimport CartModal from \"./components/CartModal\";\r\nimport {itemsInCart} from \"./index\";\r\n\r\n\r\nexport default function App(props) {\r\n    const [query, searchQuery] = useState(\"programming\");\r\n    const [, setItemsInCart] = useState([]);\r\n    const [cartModalIsOpened, setIfCartModalIsOpened] = useState(false);\r\n\r\n    itemsInCart.dispatch({type: 'LOAD_FROM_STORAGE'});\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                doSearch={(searchInput) => searchQuery(searchInput)}\r\n                items={itemsInCart.getState()}\r\n                openModal={() => {\r\n                    document.body.style.overflowY = 'hidden';\r\n                    setIfCartModalIsOpened(true)\r\n                }}\r\n            />\r\n            <div className=\"books-list\">\r\n                <BooksList\r\n                    query={query}\r\n                    addToCart={function (newItem) {\r\n                        itemsInCart.dispatch({type: 'ADD_ITEM', newItem: newItem});\r\n                        setItemsInCart(itemsInCart.getState());\r\n                    }}\r\n                />\r\n            </div>\r\n            <CartModal\r\n                isOpened={cartModalIsOpened}\r\n                closeModal={() => {\r\n                    document.body.style.overflowY = 'auto';\r\n                    setIfCartModalIsOpened(false)\r\n                }}\r\n                items={itemsInCart.getState()}\r\n                changeQuantity={function (id, newQuantity) {\r\n                    itemsInCart.dispatch({type: 'ADD_QUANTITY', id: id, newQuantity: newQuantity});\r\n                    setItemsInCart(itemsInCart.getState());\r\n                }}\r\n                removeItem={function (id) {\r\n                    itemsInCart.dispatch({type: 'REMOVE_ITEM', id: id});\r\n                    setItemsInCart(itemsInCart.getState());\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nexport const itemsInCart = createStore(reducer);\n\nfunction reducer(itemsInCart = [], action) {\n    switch (action.type) {\n        case 'ADD_ITEM':\n            for (let i = 0; i < itemsInCart.length; i++) {\n                if (itemsInCart[i].id === action.newItem.id) {\n                    if (itemsInCart[i].quantity >= 50) return;\n                    let newItems = itemsInCart.slice();\n                    newItems[i].quantity++;\n                    window.localStorage.setItem('items', JSON.stringify(newItems));\n                    return newItems;\n                }\n            }\n            let newItems = [...itemsInCart, action.newItem]\n            window.localStorage.setItem('items', JSON.stringify(newItems));\n            return newItems;\n        case 'ADD_QUANTITY':\n            for (let i = 0; i < itemsInCart.length; i++) {\n                if (action.newQuantity === 0) action.newQuantity = 1;\n                if (action.newQuantity > 50) action.newQuantity = 50;\n                if (itemsInCart[i].id === action.id) {\n                    let newItems = itemsInCart.slice();\n                    newItems[i].quantity = action.newQuantity;\n                    window.localStorage.setItem('items', JSON.stringify(newItems));\n                    return newItems;\n                }\n            }\n            return;\n        case 'REMOVE_ITEM':\n            if (window.confirm(\"Do you want to remove this item from cart?\")) {\n                for (let i = 0; i < itemsInCart.length; i++) {\n                    if (itemsInCart[i].id === action.id) {\n                        let newItems = itemsInCart.slice();\n                        newItems.splice(i, 1);\n                        window.localStorage.setItem('items', JSON.stringify(newItems));\n                        return newItems;\n                    }\n                }\n            }\n            return;\n        case 'LOAD_FROM_STORAGE':\n            return JSON.parse(window.localStorage.getItem('items')) || itemsInCart;\n        default:\n            return itemsInCart;\n    }\n}\n\nReactDOM.render(\n    <Provider store={itemsInCart}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}